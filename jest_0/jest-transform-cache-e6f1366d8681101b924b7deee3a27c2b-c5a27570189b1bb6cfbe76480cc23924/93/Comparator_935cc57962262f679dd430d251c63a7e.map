{"version":3,"sources":["Comparator.js"],"names":["Comparator","compareFunction","compare","defaultCompareFunction","a","b","lessThan","equal","greaterThan","compareOriginal","comapre"],"mappings":";;;;;;;;;;IAAqBA,U;AACjB;;;AAGA,wBAAYC,eAAZ,EAA6B;AAAA;;AACzB,aAAKC,OAAL,GAAeD,mBAAmBD,WAAWG,sBAA7C;AACH;;AAED;;;;;;;;;8BAaMC,C,EAAGC,C,EAAG;AACR,mBAAO,KAAKH,OAAL,CAAaE,CAAb,EAAgBC,CAAhB,MAAuB,CAA9B;AACH;;;iCAEQD,C,EAAGC,C,EAAG;AACX,mBAAO,KAAKH,OAAL,CAAaE,CAAb,EAAgBC,CAAhB,IAAqB,CAA5B;AACH;;;oCAEWD,C,EAAGC,C,EAAG;AACd,mBAAO,KAAKH,OAAL,CAAaE,CAAb,EAAgBC,CAAhB,IAAqB,CAA5B;AACH;;;wCAEeD,C,EAAGC,C,EAAG;AAClB,mBAAO,KAAKC,QAAL,CAAcF,CAAd,EAAiBC,CAAjB,KAAuB,KAAKE,KAAL,CAAWH,CAAX,EAAcC,CAAd,CAA9B;AACH;;;2CAEkBD,C,EAAGC,C,EAAG;AACrB,mBAAO,KAAKG,WAAL,CAAiBJ,CAAjB,EAAoBC,CAApB,KAA0B,KAAKE,KAAL,CAAWH,CAAX,EAAcC,CAAd,CAAjC;AACH;;;kCAES;AACN,gBAAMI,kBAAkB,KAAKP,OAA7B;AACA,iBAAKQ,OAAL,GAAe,UAACN,CAAD,EAAIC,CAAJ;AAAA,uBAAUI,gBAAgBJ,CAAhB,EAAmBD,CAAnB,CAAV;AAAA,aAAf;AACH;;;+CA/B6BA,C,EAAGC,C,EAAG;AAChC,gBAAID,MAAMC,CAAV,EAAa;AACT,uBAAO,CAAP;AACH;;AAED,mBAAOD,IAAIC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;AACH;;;;;;kBAnBgBL,U","file":"Comparator.js","sourcesContent":["export default class Comparator {\n    /**\n     * @param {function(a: *, b: *)} [compareFunction]\n     */\n    constructor(compareFunction) {\n        this.compare = compareFunction || Comparator.defaultCompareFunction;\n    }\n\n    /**\n     * @param {(string|number)} a\n     * @param {(string|number)} b\n     * @returns {number}\n     */\n    static defaultCompareFunction(a, b) {\n        if (a === b) {\n            return 0;\n        }\n\n        return a < b ? -1 : 1;\n    }\n\n    equal(a, b) {\n        return this.compare(a, b) === 0;\n    }\n\n    lessThan(a, b) {\n        return this.compare(a, b) < 0;\n    }\n\n    greaterThan(a, b) {\n        return this.compare(a, b) > 0;\n    }\n\n    lessThanOrEqual(a, b) {\n        return this.lessThan(a, b) || this.equal(a, b);\n    }\n\n    greaterThanOrEqual(a, b) {\n        return this.greaterThan(a, b) || this.equal(a ,b);\n    }\n\n    reverse() {\n        const compareOriginal = this.compare;\n        this.comapre = (a, b) => compareOriginal(b, a);\n    }\n}"]}