{"version":3,"sources":["DoublyLinkedListNode.test.js"],"names":["describe","it","node","DoublyLinkedListNode","expect","value","toBe","previous","toBeNull","next","nodeValue","key","node1","node2","node3","toBeDefined","toString","toStringCallback"],"mappings":";;AAAA;;;;;;AAEAA,SAAS,sBAAT,EAAiC,YAAM;AACnCC,OAAG,+BAAH,EAAoC,YAAM;AACtC,YAAMC,OAAO,IAAIC,8BAAJ,CAAyB,CAAzB,CAAb;;AAEAC,eAAOF,KAAKG,KAAZ,EAAmBC,IAAnB,CAAwB,CAAxB;AACAF,eAAOF,KAAKK,QAAZ,EAAsBC,QAAtB;AACAJ,eAAOF,KAAKO,IAAZ,EAAkBD,QAAlB;AACH,KAND;;AAQAP,OAAG,2CAAH,EAAgD,YAAM;AAClD,YAAMS,YAAY,EAAEL,OAAO,CAAT,EAAYM,KAAK,MAAjB,EAAlB;AACA,YAAMT,OAAO,IAAIC,8BAAJ,CAAyBO,SAAzB,CAAb;;AAEAN,eAAOF,KAAKG,KAAL,CAAWA,KAAlB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,eAAOF,KAAKG,KAAL,CAAWM,GAAlB,EAAuBL,IAAvB,CAA4B,MAA5B;AACAF,eAAOF,KAAKO,IAAZ,EAAkBD,QAAlB;AACAJ,eAAOF,KAAKK,QAAZ,EAAsBC,QAAtB;AACH,KARD;;AAUAP,OAAG,4BAAH,EAAiC,YAAM;AACnC,YAAMW,QAAQ,IAAIT,8BAAJ,CAAyB,CAAzB,CAAd;AACA,YAAMU,QAAQ,IAAIV,8BAAJ,CAAyB,CAAzB,EAA4BS,KAA5B,CAAd;AACA,YAAME,QAAQ,IAAIX,8BAAJ,CAAyB,CAAzB,EAA4BU,KAA5B,EAAmCD,KAAnC,CAAd;;AAEAR,eAAOQ,MAAML,QAAb,EAAuBC,QAAvB;AACAJ,eAAOQ,MAAMH,IAAb,EAAmBD,QAAnB;AACAJ,eAAOQ,MAAMP,KAAb,EAAoBC,IAApB,CAAyB,CAAzB;AACAF,eAAOS,MAAMN,QAAb,EAAuBQ,WAAvB;AACAX,eAAOS,MAAMJ,IAAb,EAAmBD,QAAnB;AACAJ,eAAOS,MAAMR,KAAb,EAAoBC,IAApB,CAAyB,CAAzB;AACAF,eAAOU,MAAMP,QAAb,EAAuBQ,WAAvB;AACAX,eAAOU,MAAML,IAAb,EAAmBM,WAAnB;AACAX,eAAOU,MAAMT,KAAb,EAAoBC,IAApB,CAAyB,CAAzB;AACAF,eAAOU,MAAML,IAAN,CAAWJ,KAAlB,EAAyBC,IAAzB,CAA8B,CAA9B;AACAF,eAAOU,MAAMP,QAAN,CAAeA,QAAf,CAAwBF,KAA/B,EAAsCC,IAAtC,CAA2C,CAA3C;AACH,KAhBD;;AAkBAL,OAAG,+BAAH,EAAoC,YAAM;AACtC,YAAMC,OAAO,IAAIC,8BAAJ,CAAyB,CAAzB,CAAb;;AAEAC,eAAOF,KAAKc,QAAL,EAAP,EAAwBV,IAAxB,CAA6B,GAA7B;;AAEAJ,aAAKG,KAAL,GAAa,cAAb;AACAD,eAAOF,KAAKc,QAAL,EAAP,EAAwBV,IAAxB,CAA6B,cAA7B;AACH,KAPD;;AASAL,OAAG,uDAAH,EAA4D,YAAM;AAC9D,YAAMS,YAAY,EAAEL,OAAO,CAAT,EAAYM,KAAK,MAAjB,EAAlB;AACA,YAAMT,OAAQ,IAAIC,8BAAJ,CAAyBO,SAAzB,CAAd;AACA,YAAMO,mBAAmB,SAAnBA,gBAAmB;AAAA,+BAAmBZ,MAAMA,KAAzB,eAAwCA,MAAMM,GAA9C;AAAA,SAAzB;;AAEAP,eAAOF,KAAKc,QAAL,CAAcC,gBAAd,CAAP,EAAwCX,IAAxC,CAA6C,qBAA7C;AACH,KAND;AAOH,CArDD","file":"DoublyLinkedListNode.test.js","sourcesContent":["import DoublyLinkedListNode from '../DoublyLinkedListNode';\n\ndescribe('DoublyLinkedListNode', () => {\n    it('should create node with value', () => {\n        const node = new DoublyLinkedListNode(1);\n\n        expect(node.value).toBe(1);\n        expect(node.previous).toBeNull();\n        expect(node.next).toBeNull();\n    });\n\n    it('should create node with object as a value', () => {\n        const nodeValue = { value: 1, key: 'test' };\n        const node = new DoublyLinkedListNode(nodeValue);\n\n        expect(node.value.value).toBe(1);\n        expect(node.value.key).toBe('test');\n        expect(node.next).toBeNull();\n        expect(node.previous).toBeNull();\n    });\n\n    it('should link nodes together', () => {\n        const node1 = new DoublyLinkedListNode(1);\n        const node2 = new DoublyLinkedListNode(2, node1);\n        const node3 = new DoublyLinkedListNode(3, node2, node1);\n\n        expect(node1.previous).toBeNull();\n        expect(node1.next).toBeNull();\n        expect(node1.value).toBe(1);        \n        expect(node2.previous).toBeDefined();\n        expect(node2.next).toBeNull();\n        expect(node2.value).toBe(2);\n        expect(node3.previous).toBeDefined();\n        expect(node3.next).toBeDefined();\n        expect(node3.value).toBe(3);\n        expect(node3.next.value).toBe(1);\n        expect(node3.previous.previous.value).toBe(1);\n    });\n\n    it('should convert node to string', () => {\n        const node = new DoublyLinkedListNode(1);\n\n        expect(node.toString()).toBe('1');\n\n        node.value = 'string value';\n        expect(node.toString()).toBe('string value');\n    });\n\n    it('should convert node to string with custom stringifier', () => {\n        const nodeValue = { value: 1, key: 'test' };\n        const node =  new DoublyLinkedListNode(nodeValue);\n        const toStringCallback = value => `value: ${value.value}, key: ${value.key}`;\n\n        expect(node.toString(toStringCallback)).toBe('value: 1, key: test');\n    });\n});"]}